// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.3
// 	protoc        v5.28.0
// source: accounter/v1/accounter.proto

package v1

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Type int32

const (
	Type_None    Type = 0
	Type_Income  Type = 1
	Type_Expense Type = 2
)

// Enum value maps for Type.
var (
	Type_name = map[int32]string{
		0: "None",
		1: "Income",
		2: "Expense",
	}
	Type_value = map[string]int32{
		"None":    0,
		"Income":  1,
		"Expense": 2,
	}
)

func (x Type) Enum() *Type {
	p := new(Type)
	*p = x
	return p
}

func (x Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Type) Descriptor() protoreflect.EnumDescriptor {
	return file_accounter_v1_accounter_proto_enumTypes[0].Descriptor()
}

func (Type) Type() protoreflect.EnumType {
	return &file_accounter_v1_accounter_proto_enumTypes[0]
}

func (x Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Type.Descriptor instead.
func (Type) EnumDescriptor() ([]byte, []int) {
	return file_accounter_v1_accounter_proto_rawDescGZIP(), []int{0}
}

type Category int32

const (
	Category_Default       Category = 0
	Category_Game          Category = 1
	Category_Food          Category = 2
	Category_Travel        Category = 3
	Category_Education     Category = 4
	Category_Health        Category = 5
	Category_Shopping      Category = 6
	Category_Other         Category = 7
	Category_Transport     Category = 8
	Category_Entertainment Category = 9
	Category_Investment    Category = 10
	Category_Loan          Category = 11
	Category_Salary        Category = 12
	Category_OtherIncome   Category = 13
	Category_App           Category = 14
	Category_House         Category = 15
	Category_Utility       Category = 16
	Category_Gift          Category = 17
	Category_Snacks        Category = 18
)

// Enum value maps for Category.
var (
	Category_name = map[int32]string{
		0:  "Default",
		1:  "Game",
		2:  "Food",
		3:  "Travel",
		4:  "Education",
		5:  "Health",
		6:  "Shopping",
		7:  "Other",
		8:  "Transport",
		9:  "Entertainment",
		10: "Investment",
		11: "Loan",
		12: "Salary",
		13: "OtherIncome",
		14: "App",
		15: "House",
		16: "Utility",
		17: "Gift",
		18: "Snacks",
	}
	Category_value = map[string]int32{
		"Default":       0,
		"Game":          1,
		"Food":          2,
		"Travel":        3,
		"Education":     4,
		"Health":        5,
		"Shopping":      6,
		"Other":         7,
		"Transport":     8,
		"Entertainment": 9,
		"Investment":    10,
		"Loan":          11,
		"Salary":        12,
		"OtherIncome":   13,
		"App":           14,
		"House":         15,
		"Utility":       16,
		"Gift":          17,
		"Snacks":        18,
	}
)

func (x Category) Enum() *Category {
	p := new(Category)
	*p = x
	return p
}

func (x Category) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Category) Descriptor() protoreflect.EnumDescriptor {
	return file_accounter_v1_accounter_proto_enumTypes[1].Descriptor()
}

func (Category) Type() protoreflect.EnumType {
	return &file_accounter_v1_accounter_proto_enumTypes[1]
}

func (x Category) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Category.Descriptor instead.
func (Category) EnumDescriptor() ([]byte, []int) {
	return file_accounter_v1_accounter_proto_rawDescGZIP(), []int{1}
}

type AddRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddRequest) Reset() {
	*x = AddRequest{}
	mi := &file_accounter_v1_accounter_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddRequest) ProtoMessage() {}

func (x *AddRequest) ProtoReflect() protoreflect.Message {
	mi := &file_accounter_v1_accounter_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddRequest.ProtoReflect.Descriptor instead.
func (*AddRequest) Descriptor() ([]byte, []int) {
	return file_accounter_v1_accounter_proto_rawDescGZIP(), []int{0}
}

func (x *AddRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type AddReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddReply) Reset() {
	*x = AddReply{}
	mi := &file_accounter_v1_accounter_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddReply) ProtoMessage() {}

func (x *AddReply) ProtoReflect() protoreflect.Message {
	mi := &file_accounter_v1_accounter_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddReply.ProtoReflect.Descriptor instead.
func (*AddReply) Descriptor() ([]byte, []int) {
	return file_accounter_v1_accounter_proto_rawDescGZIP(), []int{1}
}

type Record struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          Type                   `protobuf:"varint,5,opt,name=type,proto3,enum=accounter.v1.Type" json:"type,omitempty"`
	Category      Category               `protobuf:"varint,6,opt,name=category,proto3,enum=accounter.v1.Category" json:"category,omitempty"`
	Desc          string                 `protobuf:"bytes,3,opt,name=desc,proto3" json:"desc,omitempty"`
	Amount        float64                `protobuf:"fixed64,4,opt,name=amount,proto3" json:"amount,omitempty"`
	Date          string                 `protobuf:"bytes,7,opt,name=date,proto3" json:"date,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Record) Reset() {
	*x = Record{}
	mi := &file_accounter_v1_accounter_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Record) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Record) ProtoMessage() {}

func (x *Record) ProtoReflect() protoreflect.Message {
	mi := &file_accounter_v1_accounter_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Record.ProtoReflect.Descriptor instead.
func (*Record) Descriptor() ([]byte, []int) {
	return file_accounter_v1_accounter_proto_rawDescGZIP(), []int{2}
}

func (x *Record) GetType() Type {
	if x != nil {
		return x.Type
	}
	return Type_None
}

func (x *Record) GetCategory() Category {
	if x != nil {
		return x.Category
	}
	return Category_Default
}

func (x *Record) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *Record) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *Record) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

var File_accounter_v1_accounter_proto protoreflect.FileDescriptor

var file_accounter_v1_accounter_proto_rawDesc = []byte{
	0x0a, 0x1c, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x2f, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x20, 0x0a, 0x0a, 0x41, 0x64,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x0a, 0x0a, 0x08,
	0x41, 0x64, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0xa4, 0x01, 0x0a, 0x06, 0x52, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x12, 0x26, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x12, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x32, 0x0a, 0x08, 0x63,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12,
	0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64,
	0x65, 0x73, 0x63, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x2a,
	0x29, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x6f, 0x6e, 0x65, 0x10,
	0x00, 0x12, 0x0a, 0x0a, 0x06, 0x49, 0x6e, 0x63, 0x6f, 0x6d, 0x65, 0x10, 0x01, 0x12, 0x0b, 0x0a,
	0x07, 0x45, 0x78, 0x70, 0x65, 0x6e, 0x73, 0x65, 0x10, 0x02, 0x2a, 0xfb, 0x01, 0x0a, 0x08, 0x43,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x0b, 0x0a, 0x07, 0x44, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x47, 0x61, 0x6d, 0x65, 0x10, 0x01, 0x12, 0x08,
	0x0a, 0x04, 0x46, 0x6f, 0x6f, 0x64, 0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06, 0x54, 0x72, 0x61, 0x76,
	0x65, 0x6c, 0x10, 0x03, 0x12, 0x0d, 0x0a, 0x09, 0x45, 0x64, 0x75, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x10, 0x04, 0x12, 0x0a, 0x0a, 0x06, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x10, 0x05, 0x12,
	0x0c, 0x0a, 0x08, 0x53, 0x68, 0x6f, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x10, 0x06, 0x12, 0x09, 0x0a,
	0x05, 0x4f, 0x74, 0x68, 0x65, 0x72, 0x10, 0x07, 0x12, 0x0d, 0x0a, 0x09, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x70, 0x6f, 0x72, 0x74, 0x10, 0x08, 0x12, 0x11, 0x0a, 0x0d, 0x45, 0x6e, 0x74, 0x65, 0x72,
	0x74, 0x61, 0x69, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x10, 0x09, 0x12, 0x0e, 0x0a, 0x0a, 0x49, 0x6e,
	0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x10, 0x0a, 0x12, 0x08, 0x0a, 0x04, 0x4c, 0x6f,
	0x61, 0x6e, 0x10, 0x0b, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x61, 0x6c, 0x61, 0x72, 0x79, 0x10, 0x0c,
	0x12, 0x0f, 0x0a, 0x0b, 0x4f, 0x74, 0x68, 0x65, 0x72, 0x49, 0x6e, 0x63, 0x6f, 0x6d, 0x65, 0x10,
	0x0d, 0x12, 0x07, 0x0a, 0x03, 0x41, 0x70, 0x70, 0x10, 0x0e, 0x12, 0x09, 0x0a, 0x05, 0x48, 0x6f,
	0x75, 0x73, 0x65, 0x10, 0x0f, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x74, 0x69, 0x6c, 0x69, 0x74, 0x79,
	0x10, 0x10, 0x12, 0x08, 0x0a, 0x04, 0x47, 0x69, 0x66, 0x74, 0x10, 0x11, 0x12, 0x0a, 0x0a, 0x06,
	0x53, 0x6e, 0x61, 0x63, 0x6b, 0x73, 0x10, 0x12, 0x32, 0x5b, 0x0a, 0x09, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x65, 0x72, 0x12, 0x4e, 0x0a, 0x03, 0x41, 0x64, 0x64, 0x12, 0x18, 0x2e, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x15,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0f, 0x3a, 0x01, 0x2a, 0x22, 0x0a, 0x2f, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x65, 0x72, 0x42, 0x22, 0x5a, 0x20, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x65, 0x72, 0x5f, 0x67, 0x6f, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x3b, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_accounter_v1_accounter_proto_rawDescOnce sync.Once
	file_accounter_v1_accounter_proto_rawDescData = file_accounter_v1_accounter_proto_rawDesc
)

func file_accounter_v1_accounter_proto_rawDescGZIP() []byte {
	file_accounter_v1_accounter_proto_rawDescOnce.Do(func() {
		file_accounter_v1_accounter_proto_rawDescData = protoimpl.X.CompressGZIP(file_accounter_v1_accounter_proto_rawDescData)
	})
	return file_accounter_v1_accounter_proto_rawDescData
}

var file_accounter_v1_accounter_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_accounter_v1_accounter_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_accounter_v1_accounter_proto_goTypes = []any{
	(Type)(0),          // 0: accounter.v1.Type
	(Category)(0),      // 1: accounter.v1.Category
	(*AddRequest)(nil), // 2: accounter.v1.AddRequest
	(*AddReply)(nil),   // 3: accounter.v1.AddReply
	(*Record)(nil),     // 4: accounter.v1.Record
}
var file_accounter_v1_accounter_proto_depIdxs = []int32{
	0, // 0: accounter.v1.Record.type:type_name -> accounter.v1.Type
	1, // 1: accounter.v1.Record.category:type_name -> accounter.v1.Category
	2, // 2: accounter.v1.Accounter.Add:input_type -> accounter.v1.AddRequest
	3, // 3: accounter.v1.Accounter.Add:output_type -> accounter.v1.AddReply
	3, // [3:4] is the sub-list for method output_type
	2, // [2:3] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_accounter_v1_accounter_proto_init() }
func file_accounter_v1_accounter_proto_init() {
	if File_accounter_v1_accounter_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_accounter_v1_accounter_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_accounter_v1_accounter_proto_goTypes,
		DependencyIndexes: file_accounter_v1_accounter_proto_depIdxs,
		EnumInfos:         file_accounter_v1_accounter_proto_enumTypes,
		MessageInfos:      file_accounter_v1_accounter_proto_msgTypes,
	}.Build()
	File_accounter_v1_accounter_proto = out.File
	file_accounter_v1_accounter_proto_rawDesc = nil
	file_accounter_v1_accounter_proto_goTypes = nil
	file_accounter_v1_accounter_proto_depIdxs = nil
}
